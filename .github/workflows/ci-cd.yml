name: Solitaire CI/CD Pipeline

on:
  push:
    branches:
      - main
      - sabdalah-branch

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./sawayama-solitaire
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sawayama-solitaire:latest

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Fetch EC2 Public IP
        id: fetch-ip
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=app-server" \
            --query "Reservations[*].Instances[*].InstanceId" \
            --output text)

          PUBLIC_IP=$(aws ec2 describe-instances \
            --instance-ids $INSTANCE_ID \
            --query "Reservations[*].Instances[*].PublicIpAddress" \
            --output text)

          echo "EC2_PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Reset known_hosts and add EC2 host
        run: |
          echo "Clearing known_hosts and adding EC2 host"
          > ~/.ssh/known_hosts  # Clear known_hosts
          ssh-keyscan ${{ env.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Add EC2 host to known_hosts
        run: |
          ssh-keyscan -H ${{ env.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@$EC2_PUBLIC_IP << 'EOF'
            sleep 5
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/sawayama-solitaire:latest
            sudo docker stop sawayama-solitaire || true
            sudo docker rm sawayama-solitaire || true
            sudo docker run -d --restart unless-stopped --name sawayama-solitaire -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/sawayama-solitaire:latest
          EOF
